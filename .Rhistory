for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
if(movelist[[i]][[1]] == firstMove[i] && movelist[[i]][[2]] == secondMove[i]) {
adj_matrix[i][length(firstMove)+j] <- 1
}
}
}
}
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+j] <- 1
}
}
}
}
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N))
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+j] <- 1
}
}
}
}
adj_matrix
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N), sqrt(N))
adj_matrix
N
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+j] <- 1
}
}
}
}
adj_matrix
for(movelist in df) {}
for(movelist in df) {}
for(movelist in df) {
print(movelist[[1]])
break
}
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+k] <- 1
}
}
}
}
adj_matrix
View(adj_matrix)
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
print(movelist[[1]], movelist[[2]])
print(j, k)
print(firstMove[i], secondMove[k])
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+k] <- 1
}
}
break
}
break
}
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
cat(movelist[[1]], movelist[[2]],"\n")
cat(j, k,"\n")
cat(firstMove[i], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+k] <- 1
}
}
break
}
break
}
firstMove
firstMove[1]
firstMove[2]
for(j in 1:length(firstMove)) {
firstMove[i]
}
for(j in 1:length(firstMove)) {
print(firstMove[i])
}
remove(i)
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
cat(movelist[[1]], movelist[[2]],"\n")
cat(j, k,"\n")
cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j][length(firstMove)+k] <- 1
}
}
break
}
break
}
adj_matrix
adj_matrix[1][1]
adj_matrix[1][2]
adj_matrix[1][3]
adj_matrix[[1]][[3]]
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
cat(movelist[[1]], movelist[[2]],"\n")
cat(j, k,"\n")
cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j,length(firstMove)+k] <- 1
}
}
break
}
break
}
adj_matrix
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
cat(movelist[[1]], movelist[[2]],"\n")
cat(j, k,"\n")
cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j,length(firstMove)+k] <- 1
}
}
}
}
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, N*N)
#network.vertex.names(nw) <- c("a", "b")
ggnet(nw,label.nodes=T, col="white")
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, N)
#network.vertex.names(nw) <- c("a", "b")
ggnet(nw,label.nodes=T, col="white")
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, N*N)
#network.vertex.names(nw) <- c("a", "b")
ggnet(nw,label.nodes=T, col="white")
length(adj_matrix)
nrow(adj_matrix)
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, nrow(adj_matrix))
#network.vertex.names(nw) <- c("a", "b")
ggnet(nw,label.nodes=T, col="white")
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j,length(firstMove)+k] <- 1
adj_matrix[length(firstMove)+k,j] <- 1
}
}
}
}
N <- length(c(firstMove, secondMove))
adj_matrix <- matrix(rep(0, N*N), N)
N
for(movelist in df) {
for(j in 1:length(firstMove)) {
for(k in 1:length(secondMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[j] && movelist[[2]] == secondMove[k]) {
adj_matrix[j,length(firstMove)+k] <- 1
adj_matrix[length(firstMove)+k,j] <- 1
}
}
}
}
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, N)
#network.vertex.names(nw) <- c("a", "b")
ggnet(nw,label.nodes=T, col="white")
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix, N)
network.vertex.names(nw) <- c(firstMove, secondMove)
ggnet(nw,label.nodes=T, col="white")
nw
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove)
ggnet(nw,label.nodes=T, col="white")
firstMove <- c()
for(i in df) {
firstMove <- c(firstMove, i[[1]])
}
firstMove <- unique(firstMove)
firstMove
secondMove <- c()
for(i in df) {
secondMove <- c(secondMove, i[[2]])
}
secondMove <- unique(secondMove)
secondMove
thirdMove <- c()
for(i in df) {
thirdMove <- c(thirdMove, i[[3]])
}
thirdMove <- unique(thirdMove)
thirdMove
N <- length(c(firstMove, secondMove, thirdMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(i1 in 1:length(firstMove)) {
for(i2 in 1:length(secondMove)) {
for(i3 in 1:length(thirdMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[i1] && movelist[[2]] == secondMove[i2]) {
adj_matrix[i1,length(firstMove)+i2] <- 2
adj_matrix[length(firstMove)+i2,i1] <- 1
}
}
}
}
}
# nw <- network(matrix(c(0,1,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0,
#                        0,0,0,0,0,0),
#                      6))
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove)
ggnet(nw,label.nodes=T, col="white")
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet(nw,label.nodes=T, col="white")
ggnet(nw,label.nodes=T, col="pastel")
ggnet(nw,label.nodes=T, col="lightyellow")
ggnet(nw,label.nodes=T, col="grey")
ggnet(nw,label.nodes=T, col="darkgrey")
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet(nw, node.size = 6, label.nodes=T, col="darkgrey")
ggnet(nw, node.size = N, label.nodes=T, col="darkgrey")
N
ggnet(nw, node.size = N*N, label.nodes=T, col="darkgrey")
ggnet2(nw, node.size = N*N, label.nodes=T, col="darkgrey")
ggnet2(nw, node.size = N*N, label.nodes=T, color="darkgrey")
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, node.size = N*N, label.nodes=T, label.color="darkgrey")
ggnet2(nw, node.size = N, label.nodes=T, label.color="darkgrey")
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, node.size = N, label.nodes=T, node.color="black", label.color="darkgrey")
ggnet2(nw, node.size = N, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="darkgrey")
ggnet2(nw, node.size = N, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="darkgrey", edge.color = "blue")
ggnet2(nw, node.size = 10, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="darkgrey", edge.color = "blue")
ggnet2(nw, node.size = 14, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="darkgrey", edge.color = "blue")
ggnet2(nw, node.size = 14, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="grey", edge.color = "blue")
ggnet2(nw, node.size = 14, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, node.size = "degree", label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, node.size = "freeman", label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "freeman", label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree", label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree"*10, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree", min_rank(5) label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree", min_size = 10, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", edge.color = "blue")
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 12 edge.color = "blue")
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 12, edge.color = "blue")
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 5, edge.color = "blue")
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = "degree", edge.color = "blue")
firstMove <- c()
for(i in df) {
firstMove <- c(firstMove, i[[1]])
}
firstMove <- unique(firstMove)
firstMove
secondMove <- c()
for(i in df) {
secondMove <- c(secondMove, i[[2]])
}
secondMove <- unique(secondMove)
secondMove
thirdMove <- c()
for(i in df) {
thirdMove <- c(thirdMove, i[[3]])
}
thirdMove <- unique(thirdMove)
thirdMove
N <- length(c(firstMove, secondMove, thirdMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(i1 in 1:length(firstMove)) {
for(i2 in 1:length(secondMove)) {
for(i3 in 1:length(thirdMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[i1] && movelist[[2]] == secondMove[i2] && movelist[[3]] == thirdMove[i3]) {
adj_matrix[i1,length(firstMove)+i2] <- 1
adj_matrix[length(firstMove)+i2,i1] <- 1
adj_matrix[i2,length(firstMove)+i3] <- 1
adj_matrix[length(firstMove)+i3,i2] <- 1
}
}
}
}
}
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 5, edge.color = "blue")
firstMove <- c()
for(i in df) {
firstMove <- c(firstMove, i[[1]])
}
firstMove <- unique(firstMove)
firstMove
secondMove <- c()
for(i in df) {
secondMove <- c(secondMove, i[[2]])
}
secondMove <- unique(secondMove)
secondMove
thirdMove <- c()
for(i in df) {
thirdMove <- c(thirdMove, i[[3]])
}
thirdMove <- unique(thirdMove)
thirdMove
N <- length(c(firstMove, secondMove, thirdMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(i1 in 1:length(firstMove)) {
for(i2 in 1:length(secondMove)) {
for(i3 in 1:length(thirdMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[i1] && movelist[[2]] == secondMove[i2]) {
adj_matrix[i1,length(firstMove)+i2] <- 1
adj_matrix[length(firstMove)+i2,i1] <- 1
if(movelist[[3]] == thirdMove[i3]) {
adj_matrix[i2,length(firstMove)+i3] <- 1
adj_matrix[length(firstMove)+i3,i2] <- 1
}
}
}
}
}
}
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 5, edge.color = "blue")
N <- length(c(firstMove, secondMove, thirdMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(i1 in 1:length(firstMove)) {
for(i2 in 1:length(secondMove)) {
for(i3 in 1:length(thirdMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[i1] && movelist[[2]] == secondMove[i2]) {
adj_matrix[i1,length(firstMove)+i2] <- 1
adj_matrix[length(firstMove)+i2,i1] <- 1
if(movelist[[3]] == thirdMove[i3]) {
adj_matrix[i2,length(c(firstMove, secondMove))+i3] <- 1
adj_matrix[length(c(firstMove, secondMove))+i3,i2] <- 1
}
}
}
}
}
}
for(movelist in df) {
print(movelist[[3]])
}
for(movelist in df) {
if(movelist[[3]]) print(movelist[[3]])
}
N <- length(c(firstMove, secondMove, thirdMove))
adj_matrix <- matrix(rep(0, N*N), N)
for(movelist in df) {
for(i1 in 1:length(firstMove)) {
for(i2 in 1:length(secondMove)) {
for(i3 in 1:length(thirdMove)) {
# cat(movelist[[1]], movelist[[2]],"\n")
# cat(j, k,"\n")
# cat(firstMove[j], secondMove[k],"\n")
if(movelist[[1]] == firstMove[i1] && movelist[[2]] == secondMove[i2]) {
adj_matrix[i1,length(firstMove)+i2] <- 1
adj_matrix[length(firstMove)+i2,i1] <- 1
if(length(movelist) >= 3 && movelist[[3]] == thirdMove[i3]) {
adj_matrix[i2,length(c(firstMove, secondMove))+i3] <- 1
adj_matrix[length(c(firstMove, secondMove))+i3,i2] <- 1
}
}
}
}
}
}
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 5, edge.color = "blue")
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
ggnet2(nw, size = "indegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color=c("#2c6b32", "#318739", "#309c3a"), label.color="white", label.size = 5, edge.color = "blue")  #, "#2db339", "#1dd12e", "#0ced21"
nw <- network(adj_matrix)
network.vertex.names(nw) <- c(firstMove, secondMove, thirdMove)
nodeColors <- net %v% c("#2c6b32", "#318739", "#309c3a")
nw <- network(adj_matrix)
nodeNames <- c(firstMove, secondMove, thirdMove)
network.vertex.names(nw) <- nodeNames
nodeColors <- net %v% ifelse(nodeNames %in% firstMove, "#2c6b32", ifelse(nodeNames %in% secondMove, "#318739", "#309c3a"))
nodeColors <- nw %v% ifelse(nodeNames %in% firstMove, "#2c6b32", ifelse(nodeNames %in% secondMove, "#318739", "#309c3a"))
nodeColors <- nw %v% ifelse(nodeNames[1:N] %in% firstMove, "#2c6b32", ifelse(nodeNames %in% secondMove, "#318739", "#309c3a"))
# nodeColors <- nw %v% ifelse(nodeNames[1:N] %in% firstMove, "#2c6b32", ifelse(nodeNames %in% secondMove, "#318739", "#309c3a"))
nodeColors <- nw %v% c("2c6b32", "#318739", "#309c3a")
ggnet2(nw, size = "outdegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color=nodeColors, label.color="white", label.size = 5, edge.color = "blue")  #, "#2db339", "#1dd12e", "#0ced21"
ggnet2(nw, size = "outdegree", max_size = 30, label=c(firstMove, secondMove, thirdMove), node.color="black", label.color="white", label.size = 5, edge.color = "blue")  #, "#2db339", "#1dd12e", "#0ced21"
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(tidyverse)
finaldata<-read.csv("D:/college/datavisualization/project/ChessAssistant/clean_ds_post_move_analysis.csv")
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(tidyverse)
library(network)
library(sna)
library(GGally)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(tidyverse)
library(network)
library(sna)
library(GGally)
finaldata<-read.csv("/clean_ds_post_move_analysis.csv")
finaldata<-read.csv("clean_ds_post_move_analysis.csv")
setwd("~/Desktop/FDA/Project")
